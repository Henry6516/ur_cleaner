#! usr/bin/env/python3
# coding:utf-8
# @Time: 2020-07-21 13:14
# Author: turpure

from src.services.base_service import BaseService
import math
from src.tasks.ebay_change_express_config import special_post_codes
import datetime


class Updater(BaseService):
    def __init__(self):
        super().__init__()

    def get_orders(self):
        orders = [
            21680650, 21659983, 21662746, 21709152, 21710042, 21709994, 21711774, 21722178, 21722140, 21722177,
            21720482, 21720641, 21720390, 21720133, 21721872, 21722008, 21722014, 21721880, 21722107, 21722166,
            21720138, 21720139, 21720166, 21719324, 21719992, 21720783, 21720006, 21720974, 21720984, 21721000,
            21720901, 21720566, 21720794, 21720957, 21720959, 21720973, 21721056, 21721966, 21721979, 21710223,
            21710015, 21711148, 21711940, 21711949, 21711696, 21711985, 21712376, 21713056, 21713211, 21712780,
            21713221, 21713337, 21713431, 21713210, 21713045, 21712894, 21713724, 21713800, 21713802, 21713402,
            21715219, 21715025, 21715230, 21715020, 21715289, 21715217, 21714287, 21715372, 21715269, 21716408,
            21715845, 21714942, 21715838, 21715997, 21715981, 21716745, 21716750, 21716619, 21716340, 21716641,
            21716634, 21716653, 21716677, 21716843, 21716665, 21716684, 21717827, 21716771, 21720038, 21718575,
            21717815, 21721115, 21721042, 21720123, 21720377, 21721114, 21720125, 21720135, 21718867, 21720066,
            21718904, 21719500, 21718916, 21610570, 21576516, 21638976, 21659987, 21659891, 21660088, 21659949,
            21659951, 21659955, 21659910, 21659958, 21659924, 21659913, 21659961, 21659915, 21659962, 21661246,
            21659944, 21659898, 21659931, 21640943, 21660621, 21661260, 21660733, 21661248, 21660632, 21661258,
            21660740, 21660742, 21661250, 21661730, 21660634, 21660825, 21660751, 21661946, 21661755, 21661756,
            21661685, 21661762, 21661658, 21661654, 21661684, 21661764, 21661720, 21661941, 21661652, 21661927,
            21662051, 21661949, 21662054, 21662056, 21662055, 21662063, 21662096, 21662069, 21661945, 21661904,
            21662097, 21662059, 21661918, 21662048, 21662023, 21662099, 21662021, 21662041, 21662022, 21662731,
            21662738, 21662739, 21662749, 21662751, 21662756, 21662582, 21662770, 21662740, 21662773, 21662592,
            21662777, 21662716, 21662597, 21707614, 21709314, 21708934, 21709235, 21709251, 21708803, 21709237,
            21708826, 21709280, 21709137, 21709029, 21709173, 21709331, 21709230, 21709215, 21709332, 21708859,
            21710303, 21709234, 21709386, 21709201, 21709320, 21711160, 21710226, 21709847, 21710299, 21709946,
            21710062, 21710012, 21710193, 21709968, 21710320, 21679818, 21679814, 21680662, 21680323, 21680325,
            21680379, 21680400, 21680643, 21680649, 21680642, 21680652, 21682344, 21680891, 21682311, 21682280,
            21682313, 21682331, 21685451, 21685326, 21685243, 21685268, 21685426, 21685405, 21685410, 21685456,
            21685335, 21685340, 21685321, 21686893, 21686668, 21686895, 21686686, 21686953, 21687671, 21678096,
            21678092, 21679352, 21679771, 21679392, 21679778, 21666656, 21686628, 21686966, 21686620, 21686734,
            21686853, 21686964, 21686717, 21686712, 21686616, 21686630, 21685734, 21685500, 21685229, 21685752,
            21685444, 21685447, 21682291, 21682308, 21680909, 21680915, 21680910, 21680640, 21687427, 21710227,
            21710016, 21710013, 21709920, 21708832, 21709338, 21708814, 21708847, 21709337, 21708809, 21709330,
            21708841, 21708800, 21708957, 21708952, 21709309, 21709245, 21708879, 21709073, 21708870, 21708935,
            21662778, 21662729, 21662601, 21662581, 21662018, 21662793, 21662015, 21662007, 21661957, 21662068,
            21662082, 21662002, 21661955, 21661713, 21661903, 21661734, 21661953, 21661744, 21661701, 21661204,
            21661951, 21661625, 21660704, 21660709, 21661202, 21661739, 21660707, 21660631, 21660703, 21660620,
            21640782, 21641008, 21639897, 21645370, 21645355, 21642650, 21659967, 21659975, 21659900, 21659923,
            21659950, 21610399, 21636834, 21635515, 21635507, 21635504, 21587582, 21577823, 21575899, 21576515,
            21576504, 21576508, 21593175, 21721888, 21721621, 21719390, 21719141, 21716768, 21716685, 21717910,
            21716746, 21716642, 21716747, 21716339, 21716316, 21715350, 21721327, 21713404, 21712878, 21712874,
            21713533, 21712902, 21721388, 21712268, 21711840, 21711223, 21711228, 21711150, 21709977, 21710318,
            21710308, 21709972, 21722163, 21721884, 21720864, 21721634, 21720830, 21720853, 21720281, 21720753,
            21720028, 21720155, 21720275, 21719943, 21719941, 21721998, 21721926, 21721945, 21719847, 21719833,
            21722150, 21662008, 21721875, 21722121, 21721957, 21721992, 21709995, 21712899, 21713799, 21713507,
            21714790, 21715126, 21716145, 21715988, 21610568, 21637599, 21638979, 21619277, 21610579, 21659925,
            21659904, 21659943, 21661277, 21641935, 21642642, 21660809, 21660888, 21661632, 21662209, 21662089,
            21662595, 21708856, 21709005, 21708778, 21708793, 21708813, 21709239, 21709046, 21710063, 21710061,
            21710183, 21682283, 21682312, 21685323, 21685330, 21685272, 21685306, 21685223, 21686675, 21666959,
            21686856, 21686719, 21685423, 21679831, 21679812, 21709923, 21710027, 21708805, 21709318, 21709311,
            21662600, 21662681, 21662086, 21661912, 21641028, 21645364, 21659918, 21575921, 21590547, 21610394,
            21716655, 21716060, 21714847, 21715979, 21716028, 21713078, 21712885, 21712103, 21721887, 21720698,
            21720314, 21720752, 21722138, 21688058, 21679550, 21720704, 21720382, 21577776, 21636839, 21618461,
            21659988, 21660624, 21661743, 21661988, 21661979, 21662691, 21708788, 21708854, 21685331, 21709255,
            21661906, 21637123, 21662791, 21659953, 21662049,
        ]
        return orders

    def calculate_express_fee(self, order):
        # 重新计算物流费用
        calculate_sql = f'exec P_Fr_CalcShippingCostByNid {order}'
        log_sql = f"exec S_WriteTradeLogs  '{order}', '运费计算', 'ur_cleaner'"
        try:
            self.cur.execute(calculate_sql)
            self.cur.execute(log_sql)
            self.con.commit()
            self.logger.info(f'success to calculate express of {order}')

        except Exception as why:
            self.logger.error(f'fail to calculate express of {order} cause of {why}')

    def work(self):
        try:
            orders = self.get_orders()
            for od in orders:
                self.calculate_express_fee(od)

        except Exception as why:
            self.logger.error(f'fail to finish task cause of {why}')
        finally:
            pass


# 执行程序
if __name__ == "__main__":
    worker = Updater()
    worker.work()






